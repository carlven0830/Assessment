// <auto-generated />
using System;
using JrAssessment.Repository.SqLite;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JrAssessment.Repository.Migrations
{
    [DbContext(typeof(SqLiteDbContext))]
    [Migration("20250610094227_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("JrAssessment.Model.Database.JoinTable.TblBookingRoom", b =>
                {
                    b.Property<Guid>("TblBookingId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TblRoomId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BookingId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("TEXT");

                    b.HasKey("TblBookingId", "TblRoomId");

                    b.HasIndex("TblRoomId");

                    b.ToTable("TblBookingRoom");
                });

            modelBuilder.Entity("JrAssessment.Model.Database.TblBooking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GuestId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GuestId");

                    b.ToTable("TblBooking");
                });

            modelBuilder.Entity("JrAssessment.Model.Database.TblGuest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("GuestBirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("GuestEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GuestName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GuestPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GuestPhone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GuestUsername")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TblGuest");
                });

            modelBuilder.Entity("JrAssessment.Model.Database.TblRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoomNum")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoomType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("TblRoom");
                });

            modelBuilder.Entity("JrAssessment.Model.Database.JoinTable.TblBookingRoom", b =>
                {
                    b.HasOne("JrAssessment.Model.Database.TblBooking", "TblBooking")
                        .WithMany()
                        .HasForeignKey("TblBookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JrAssessment.Model.Database.TblRoom", "TblRoom")
                        .WithMany()
                        .HasForeignKey("TblRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblBooking");

                    b.Navigation("TblRoom");
                });

            modelBuilder.Entity("JrAssessment.Model.Database.TblBooking", b =>
                {
                    b.HasOne("JrAssessment.Model.Database.TblGuest", "TblGuest")
                        .WithMany("TblBookings")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblGuest");
                });

            modelBuilder.Entity("JrAssessment.Model.Database.TblGuest", b =>
                {
                    b.Navigation("TblBookings");
                });
#pragma warning restore 612, 618
        }
    }
}
